##### 装饰器 ####
定义：
    本质是函数，（装饰其他函数）就是为其他函数添加附件功能。
原则：
    1、不能修改被装饰的函数的源代码。
    2、不能修改被装饰的函数的调用方式。

实现装饰器知识储备：
    1、函数即“变量”。
    2、高阶函数。
        a、把一个函数名当做实参传给另外一个函数。(在不修改被装饰函数源代码的情况下为其添加附加功能)
        b、返回值中包含函数名。(不修改函数调用的方式)
    3、嵌套函数。

高阶函数 + 嵌套函数 =》 装饰器


#### 生成器generator ####
定义：一个函数调用时返回一个迭代器，那这个函数就叫做生成器（generator），如果函数中包含yield语法，那这个函数就会变成生成器
1、只在调用时才会生成相应的数据
2、只记录当前位置
3、只有一个 __next__() 方法（python2.7里方法是next()）


#### 迭代器 ####
迭代器是访问集合元素的一种方式。迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。
迭代器只能往前不会后退，不过这也没什么，因为人们很少在迭代途中往后退。
另外，迭代器的一大优点是不要求事先准备好整个迭代过程中所有的元素。
迭代器仅仅在迭代到某个元素时才计算该元素，而在这之前或之后，元素可以不存在或者被销毁。
这个特点使得它特别适合用于遍历一些巨大的或是无限的集合，比如几个G的文件
    特点：
    1、访问者不需要关心迭代器内部的结构，仅需通过next()方法不断去取下一个内容
    2、不能随机访问集合中的某个值 ，只能从头到尾依次访问
    3、访问到一半时不能往回退
    4、便于循环比较大的数据集合，节省内存