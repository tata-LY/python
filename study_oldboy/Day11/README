上周回顾：
epoll linux         libevent.so
gevent              libevent.so


1.RabbitMQ消息队列    https://www.cnblogs.com/alex3714/articles/5248247.html
    Python自身的Queue
            threading Queue
            process Queue   父进程与子进程进行交互，或者同属于同一父进程下多个子进程进行交互

    RabbitMQ 语言erlang
    Publish\Subscribe(消息发布\订阅)
    简单的例子都基本都是1对1的消息发送和接收，即消息只能发送到指定的queue里，但有些时候你想让你的消息被所有的Queue收到，类似广播的效果，这时候就要用到exchange
        fanout: 所有bind到此exchange的queue都可以接收消息
        direct: 通过routingKey和exchange决定的那个唯一的queue可以接收消息
        topic:所有符合routingKey(此时可以是一个表达式)的routingKey所bind的queue可以接收消息
            　　 表达式符号说明：#代表一个或多个字符，*代表任何字符
                    例：#.a会匹配a.a，aa.a，aaa.a等
                        *.a会匹配a.a，b.a，c.a等
                    注：使用RoutingKey为#，Exchange Type为topic的时候相当于使用fanout　
    Remote procedure call(RPC)
        To illustrate how an RPC service could be used we're going to create a simple client class. It's going to expose a method named call which sends an RPC request and blocks until the answer is received:

2.Redis缓存数据库    http://www.cnblogs.com/alex3714/articles/6217453.html
    - 连接方式
        - 操作模式
        redis-py提供两个类Redis和StrictRedis用于实现Redis的命令，StrictRedis用于实现大部分官方的命令，并使用官方的语法和命令，Redis是StrictRedis的子类，用于向后兼容旧版本的redis-py
        - 连接池
        redis-py使用connection pool来管理对一个redis server的所有连接，避免每次建立、释放连接的开销。默认，每个Redis实例都会维护一个自己的连接池。可以直接建立一个连接池，然后作为参数Redis，这样就可以实现多个Redis实例共享一个连接池。
    - 操作    https://www.runoob.com/redis/redis-tutorial.html
        String 操作
            set/setnx/setex/mset/get/mget/getset/getrange/setrange/sebit/getbit/bitcount/strlen/incr/decr/append
        Hash 操作
            hset/hmset/hget/hmget/hgetall/hlen/hkeys/hvals/hexists/hdel/hincrby/hincrbyfloat/hscan
        List 操作
            lpush/lpushx/llen/linsert/lset/lrem/lpop/lindex/lrange/ltrim/rpoplpush/blpop/brpoplpush/
        Set 操作
        Sort Set 操作
    - 管道
        redis-py默认在执行每次请求都会创建（连接池申请连接）和断开（归还连接池）一次连接操作，如果想要在一次请求中指定多个命令，则可以使用pipline实现一次请求指定多个命令，并且默认情况下一次pipline 是原子性操作。
    - 发布订阅
    更多参见：
        https://github.com/andymccurdy/redis-py/
        http://doc.redisfans.com/